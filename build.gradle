buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.web.admin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    //implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'org.springframework.security', name: 'spring-security-test'

    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    /*
    인텔리제이 기준 적용방법 (gradle 4.x 기준)
    1.의존성 추가
    2.lombok 플러그인을 추가
    3.Settings > Build .. > compiler > annotationProcessor >  enable annotation processing 체크
    */
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa') // spring boot 버전에 따라 jpa관련 라이브러리 관리
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc') // 세션 db저장 관련 라이브러리
}
