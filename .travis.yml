language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"

# master브랜치에 push할 경우 travisCI에서 ./gradlew를 실행할 권한이 없는경우 에러가 발생하므로 추가
before_install:
  - chmod +x gradlew

#deploy 명령어 실행전 실행. codeDeploy가 jar파일을 인식못하므로 jar+ 기타파일 설정을 zip으로 압축
before_deploy:
  - zip -r springboot-webservice * # 현재위치에 지정한 이름으로 압축
  - mkdir -p deploy # TtravisCI가 실행중인 위치에 폴더생성
  - mv springboot-webservice.zip deploy/springboot-webservice.zip

# S3업로드, codeDeploy로 배포등 외부서비스와 연동할 행위를 선언
deploy:
  - provider: s3 # S3로 전송
    access_key_id: $AWS_ACCESS_KEY # TravisCI repo 세팅에 저장된값
    secret_access_key: $AWS_SECRET_KEY # TravisCI repo 세팅에 저장된값

    bucket: swsong-springboot-webservice-build
    region: ap-northeast-2

    skip_cleanup: true
    acl: private # zip 파일 접근을 private로
    local_dir: deploy # before_deploy에서 생성한 dir
    wait_until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY

    bucket: swsong-springboot-webservice-build
    key: springboot-webservice.zip # 빌드파일을 압축해서 전달

    build_type: zip # 압축확장자
    application: springboot-webservice # AWS 웹콘솔에 등록한 어플리케이션

    deployment_group: springboot-webservice-group # AWS 웹콘솔에 등록한 그룹

    region: ap-northeast-2
    wait_until-deployed: true

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - devswsong@gmail.com